const keys = require('../keys');
var ebay = require('ebay-api');
const fs = require('fs');
const ebayProducts = require('./files/itemsIngram');
var revisePrice;
var count = 1;

fs.writeFile('files/log.js', '','utf-8');
for(var i = 0; i<ebayProducts.length; i++)
	if(ebayProducts[i].Ingram){
	revisePrice = setPrice(ebayProducts[i].Ingram["Available Quantity"], 
									 parseFloat(ebayProducts[i].CurrentPrice.amount),
									 ebayProducts[i].Ingram["Weight"],
									 parseFloat(ebayProducts[i].Ingram["Customer Price with Tax"])	 
				  			);
	if(revisePrice !== parseFloat(ebayProducts[i].CurrentPrice.amount))
		ebay.xmlRequest({
				  serviceName : 'Trading',
				  opType : 'ReviseFixedPriceItem',
				  devId: keys.devId,
				  certId: keys.certId,
				  appId: keys.appId,
				  sandbox: false,
				  authToken: keys.token,

				  params: {
					  Item:{
						ItemID: ebayProducts[i].ItemID,
						//Title: 'Changed Now',
						StartPrice: revisePrice,
						}
					  }
					}, function(error, results) {
					  // ...
						//if(error) console.error(error);
						if(results.Ack !== 'Failure'){
							console.log(results.ItemID);
							fs.appendFile('files/log.js', JSON.stringify(results, null, '\t'),'utf-8');
						}
						else console.log(results);
					});
		}
//------------------------------------------------------------------------------------------------------------------
	function setPrice(qty, price, weight, buy){
		var cost = buy + postage(weight);
		var sell = +(Math.round(cost + (cost*.13) + "e+2")  + "e-2");
		if(qty == 0 && price < cost*2)
			return price * 2;
		else if(price < sell)
			return sell;
		else if(price > cost * 2)
			return sell;
		else
			return price;

		function postage (w){
			if(w < .100) return 3.50;
			else if(w < .550) return 7.45;
			else return 10;
			}
	}
//-----------------------------------------------------------------------------------------------------------------
/*if(ebayProducts[i].ItemSpecifics.NameValueList.filter( function(itemSpecifics){
			return itemSpecifics.Name == 'MPN';
		})[0].Value == 'ACK-413-022-Z')*/
/*if(ebayProducts[i].Ingram && parseFloat(ebayProducts[i].CurrentPrice.amount) < ebayPrice(ebayProducts[i].Ingram["Customer Price with Tax"],ebayProducts[i].Ingram["Weight"]))*/
//fs.writeFile('rows.csv', 'Count,Title,Price,BuyINC\n','utf-8',(err)=>{if(err)throw err;});
/*fs.appendFile('rows.csv', 
					  ++count+','
					  +ebayProducts[i].Title+','
					  +ebayProducts[i].CurrentPrice.amount+','
					  +ebayProducts[i].Ingram["Customer Price with Tax"]+','
					  +ebayPrice(ebayProducts[i].Ingram["Customer Price with Tax"],ebayProducts[i].Ingram["Weight"])+'\n',
					  'utf-8',(err)=>{if(err)throw err;});*/